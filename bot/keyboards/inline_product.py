from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from keyboards.inline_main import MenuCallBack


def get_user_product_btn(
        *,
        level: int,
        category: int,
        page: int,
        pagination_btn: dict | None = None,  # –†–∞–∑—Ä–µ—à–∞–µ–º None
        product_id: int,
        sizes: tuple[int] = (2, 1)
):
    keyboard = InlineKeyboardBuilder()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    keyboard.add(
        InlineKeyboardButton(
            text="‚óÄÔ∏è–í–µ—Ä–Ω—É—Ç—Å—è",
            callback_data=MenuCallBack(level=level - 1, menu_name="catalog").pack()
        ),
        InlineKeyboardButton(
            text="–ö–æ—Ä–∑–∏–Ω–∞ üõí",
            callback_data=MenuCallBack(level=3, menu_name="cart").pack()
        ),
        InlineKeyboardButton(
            text="–ö—É–ø–∏—Ç—å üíµ",
            callback_data=MenuCallBack(
                level=level, menu_name="add_to_cart", product_id=product_id).pack()
        )
    )

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
    keyboard.adjust(*sizes)

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é
    pagination_btn = pagination_btn or {}  # –ó–∞–º–µ–Ω—è–µ–º None –Ω–∞ –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å
    pagination_row = []

    for text, action in pagination_btn.items():
        if action == "next":
            new_page = page + 1
        elif action == "prev":
            new_page = page - 1
        else:
            continue

        pagination_row.append(
            InlineKeyboardButton(
                text=text,
                callback_data=MenuCallBack(
                    level=level,
                    menu_name=action,
                    category=category,
                    page=new_page
                ).pack()
            )
        )

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∏
    if pagination_row:
        keyboard.row(*pagination_row)

    return keyboard.as_markup()