from typing import Dict

from aiogram.filters.callback_data import CallbackData
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from pydantic.v1 import validator
from typing_extensions import Optional


# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è callback-–¥–∞–Ω–Ω—ã—Ö –º–µ–Ω—é.
# –ö–ª–∞—Å—Å MenuCallBack –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç
# CallbackData –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –ø—Ä–µ—Ñ–∏–∫—Å "menu" –∫ callback-–¥–∞–Ω–Ω—ã–º.
class MenuCallBack(CallbackData, prefix="menu"):
    level: int  # –£—Ä–æ–≤–µ–Ω—å –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏ –º–µ–Ω—é.
    # –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –Ω–∞ –∫–∞–∫–æ–º —É—Ä–æ–≤–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è.
    menu_name: str  # –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –º–µ–Ω—é,
    # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.
    # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é None.
    category: Optional[int] = None
    page: int = 1
    # –ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –º–µ–Ω—é.
    # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–≤–µ–Ω 1.
    product_id: Optional[int] = None
    # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–¥—É–∫—Ç–∞,
    # –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é None.

    # –í–∞–ª–∏–¥–∞—Ç–æ—Ä –¥–ª—è –ø–æ–ª—è level, —á—Ç–æ–±—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å,
    # —á—Ç–æ —É—Ä–æ–≤–µ–Ω—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º.
    @validator("level")
    def validate_level(self, v):
        if v < 0:
            raise ValueError("Level cannot be negative")
        return v


# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è callback-–¥–∞–Ω–Ω—ã—Ö,
# —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –ø–æ –∑–∞–∫–∞–∑—É.
# –ü—Ä–µ—Ñ–∏–∫—Å "order" –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω –∫ callback-–¥–∞–Ω–Ω—ã–º.
class OrderCallbackData(CallbackData, prefix="order"):
    action: str  # –î–µ–π—Å—Ç–≤–∏–µ, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –∑–∞–∫–∞–∑–æ–º
    # (–Ω–∞–ø—Ä–∏–º–µ—Ä, "create", "confirm" –∏ —Ç.–¥.).
    user_id: int | None = (
        None  # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é None.
    )


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
def get_user_main_btn(
        *,
        level: int,
        sizes: tuple[int, ...] = (2,)) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
      - level: —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –º–µ–Ω—é,
       –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è callback-–¥–∞–Ω–Ω—ã—Ö.
      - sizes: –∫–æ—Ä—Ç–µ–∂, –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∏–π –∫–æ–º–ø–æ–Ω–æ–≤–∫—É —Ä—è–¥–æ–≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
       (–Ω–∞–ø—Ä–∏–º–µ—Ä, (2,) –æ–∑–Ω–∞—á–∞–µ—Ç –ø–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥—É).

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
      - InlineKeyboardMarkup, –≥–æ—Ç–æ–≤—É—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    """
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–∏–ª–¥–µ—Ä–∞ –¥–ª—è inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.
    keyboard = InlineKeyboardBuilder()

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ª–æ–≤–∞—Ä—å —Å —Ç–µ–∫—Å—Ç–∞–º–∏ –∫–Ω–æ–ø–æ–∫ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –∏–º–µ–Ω–∞–º–∏ –º–µ–Ω—é.
    btn = {
        "–¢–æ–≤–∞—Ä—ã üç≠ üí®": "catalog",
        "–ö–æ—Ä–∑–∏–Ω–∞ üõí": "cart",
        "–û –Ω–∞—Å üí¨": "about",
        "–û–ø–ª–∞—Ç–∞ üí≥": "payment",
        "–î–æ—Å—Ç–∞–≤–∫–∞ üì¶": "shipping",
    }

    # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –∏ —Å–æ–∑–¥–∞–µ–º –¥–ª—è –∫–∞–∂–¥–æ–π –∫–Ω–æ–ø–∫–∏
    # InlineKeyboardButton —Å callback-–¥–∞–Ω–Ω—ã–º–∏.
    for text, menu_name in btn.items():
        if menu_name == "catalog":
            # –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ "–ö–∞—Ç–∞–ª–æ–≥", —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –Ω–∞ 1.
            keyboard.add(
                InlineKeyboardButton(
                    text=text,
                    callback_data=MenuCallBack(
                        level=level + 1, menu_name=menu_name
                    ).pack(),
                )
            )
        elif (
                menu_name == "cart"
        ):  # –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ "–ö–æ—Ä–∑–∏–Ω–∞", –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å 3.
            keyboard.add(
                InlineKeyboardButton(
                    text=text,
                    callback_data=MenuCallBack(level=3,
                                               menu_name=menu_name).pack(),
                )
            )
        else:  # –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –º–µ–Ω—é.
            keyboard.add(
                InlineKeyboardButton(
                    text=text,
                    callback_data=MenuCallBack(level=level,
                                               menu_name=menu_name).pack(),
                )
            )

    # –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ —Ä—è–¥–∞–º —Å–æ–≥–ª–∞—Å–Ω–æ –∑–∞–¥–∞–Ω–Ω—ã–º —Ä–∞–∑–º–µ—Ä–∞–º
    # –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Ä–∞–∑–º–µ—Ç–∫—É.
    return keyboard.adjust(*sizes).as_markup() # type : ignore


# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏–∑ —Å–ª–æ–≤–∞—Ä—è.
def get_callback_btn(
        *,
        btn: Dict[str, str],
        sizes: tuple[int, ...] = (2,)) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–æ–≤–∞—Ä—è,
     –≥–¥–µ –∫–ª—é—á ‚Äî —ç—Ç–æ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî callback-–¥–∞–Ω–Ω—ã–µ.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
      - btn: —Å–ª–æ–≤–∞—Ä—å, –≤ –∫–æ—Ç–æ—Ä–æ–º –∫–ª—é—á–∏ —è–≤–ª—è—é—Ç—Å—è —Ç–µ–∫—Å—Ç–∞–º–∏ –∫–Ω–æ–ø–æ–∫,
       –∞ –∑–Ω–∞—á–µ–Ω–∏—è ‚Äî callback-–¥–∞–Ω–Ω—ã–º–∏.
      - sizes: –∫–æ—Ä—Ç–µ–∂, –∑–∞–¥–∞—é—â–∏–π –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –∫–∞–∂–¥–æ–º —Ä—è–¥—É.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
      - InlineKeyboardMarkup, –≥–æ—Ç–æ–≤—É—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    """
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–∏–ª–¥–µ—Ä–∞ –¥–ª—è inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.
    keyboard = InlineKeyboardBuilder()

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º —Å–ª–æ–≤–∞—Ä—è.
    for text, data in btn.items():
        keyboard.add(InlineKeyboardButton(text=text, callback_data=data))

    # –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ —Ä—è–¥–∞–º —Å–æ–≥–ª–∞—Å–Ω–æ –∑–∞–¥–∞–Ω–Ω—ã–º —Ä–∞–∑–º–µ—Ä–∞–º
    # –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Ä–∞–∑–º–µ—Ç–∫—É.
    return keyboard.adjust(*sizes).as_markup()  # type : ignore
