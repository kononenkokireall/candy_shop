import logging
from typing import Tuple

from aiogram.types import InlineKeyboardMarkup
from aiogram.utils.formatting import (
    Bold,
    as_list,
    as_marked_section,
    TextLink,
    Underline
)

from database.models import Order
from keyboards.linline_admin import build_admin_keyboard

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
)
logger = logging.getLogger(__name__)


def format_order_notification(order: Order) -> Tuple[str, InlineKeyboardMarkup]:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–µ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
    try:
        if not order:
            return "‚ö†Ô∏è –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω", build_admin_keyboard(0)

        user = order.user
        if not user:
            return "‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", build_admin_keyboard(order.id)

        message_text = as_list(
            as_marked_section(
                Bold("üî• –ù–æ–≤—ã–π –∑–∞–∫–∞–∑!"),
                f"#{order.id}",
                marker="‚ñ´Ô∏è ",
            ),
            as_marked_section(
                Bold("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:"),
                TextLink(
                    user.first_name or "–ë–µ–∑ –∏–º–µ–Ω–∏",
                    url=f"tg://user?id={user.user_id}"
                ),
                f"–¢–µ–ª–µ—Ñ–æ–Ω: {user.phone or '–Ω–µ —É–∫–∞–∑–∞–Ω'}",
                marker="  ‚ñ™Ô∏è ",
            ),
            as_marked_section(
                Bold("üì¶ –°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:"),
                *[
                    f"{item.product.name} x{item.quantity} - {item.price:.2f} PLN"
                    if item.product
                    else f"–£–¥–∞–ª—ë–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä (ID: {item.product_id})"
                    for item in order.items
                ],
                marker="  ‚ñ™Ô∏è ",
            ),
            as_marked_section(
                Underline("–ò—Ç–æ–≥–æ:"),
                f"{order.total_price:.2f} PLN",
                Bold(order.status),
                marker="‚ñ´Ô∏è ",
            ),
            sep="\n"
        ).as_html()

        keyboard = build_admin_keyboard(order.id)
        return message_text, keyboard

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}", exc_info=True)
        return "–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", build_admin_keyboard(order.id)