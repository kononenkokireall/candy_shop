# –ö–ª–∞—Å—Å —Ñ–∏–ª—å—Ç—Ä–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ –∑–∞–∫–∞–∑–∞–º
import logging

from aiogram import types, Bot
from aiogram.filters import Filter
from aiogram.types import CallbackQuery
from sqlalchemy.ext.asyncio import AsyncSession

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã ORM –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î
from database.orm_querys_order.orm_query_create_order import (
    orm_get_user_carts,
    orm_add_order,
    orm_get_info_pages,
    orm_get_order_details
)

from handlers.user_events.user_main import user_private_router
from keyboards.inline_main import OrderCallbackData
from keyboards.inline_pay import get_payment_keyboard


class OrderCallbackFilter(Filter):
    async def __call__(self, callback: CallbackQuery) -> bool:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ callback_data —Å "order:"
        return callback.data.startswith("order:")


# Handler –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö OrderCallbackData
@user_private_router.callback_query(OrderCallbackData.filter())
async def process_order(
        callback: types.CallbackQuery,
        session: AsyncSession,
        bot: Bot,
):
    user = callback.from_user  # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
        cart_items = await orm_get_user_carts(session, user.id)
        if not cart_items:
            await callback.answer("üõí –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!", show_alert=True)
            return

        # –†–∞—Å—á–µ—Ç –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏
        total = sum(item.product.price * item.quantity for item in cart_items)

        # –§–æ—Ä–º–∏—Ä—É–µ–º items –¥–ª—è –∑–∞–∫–∞–∑–∞
        order_items = [
            {
                "product_id": item.product.id,
                "quantity": item.quantity,
                "price": float(item.product.price)
            } for item in cart_items
        ]

        # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        order = await orm_add_order(
            session=session,
            user_id=user.id,
            total_price=total,
            items=order_items,
            status="pending"  # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
        )

        # –ü–æ–ª—É—á–∞–µ–º –±–∞–Ω–Ω–µ—Ä –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
        order_banner = await orm_get_info_pages(session, page="order")
        admin_link = order_banner[0].admin_link if order_banner else "https://t.me/CBDS_support"

        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await callback.message.answer(
            f"‚úÖ –ó–∞–∫–∞–∑ #{order.id} –æ—Ñ–æ—Ä–º–ª–µ–Ω!\n"
            f"–°—É–º–º–∞: {total} PLN\n"
            f"–°–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º: {admin_link}",
            reply_markup=types.ReplyKeyboardRemove()
        )

        # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        order_details = await orm_get_order_details(session, order.id)
        order_text = (
            f"üõí –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ #{order.id}\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{user.username}\n"
            f"üì± ID: {user.id}\n"
            f"üìû –ö–æ–Ω—Ç–∞–∫—Ç: {user.phone or '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n"
            f"üíµ –°—É–º–º–∞: {total} PLN\n\n"
            "–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:\n"
        )

        for item in order_details.items:
            order_text += f"- {item.product.name} ({item.quantity} —à—Ç. √ó {item.price} PLN)\n"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        await bot.send_message(
            chat_id="https://t.me/CBDS_support",
            text=order_text,
            parse_mode="Markdown",
            reply_markup=get_payment_keyboard(order_id=order.id)  # –ü–µ—Ä–µ–¥–∞–µ–º ID –∑–∞–∫–∞–∑–∞
        )

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞: {str(e)}", exc_info=True)
        await callback.message.answer(
            "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
    finally:
        await callback.answer()
