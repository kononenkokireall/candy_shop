import logging

from aiogram.exceptions import TelegramBadRequest
from aiogram import types, Router
from aiogram.filters import CommandStart, Command
from aiogram.types import InputMediaPhoto

from sqlalchemy.ext.asyncio import AsyncSession

from database.orm_querys.orm_query_cart import orm_add_to_cart
from database.orm_querys.orm_query_user import orm_add_user

# –ò–º–ø–æ—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π.
from filters.chat_types import ChatTypeFilter

# –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –º–µ–Ω—é –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
from handlers.menu_events.menu_processing_get import get_menu_content

# –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ (checkout) –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
from handlers.user_events.user_checkout import checkout

# –ò–º–ø–æ—Ä—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è callback-–¥–∞–Ω–Ω—ã—Ö –º–µ–Ω—é.
from keyboards.inline_main import MenuCallBack

# –ò–º–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, ADMIN_CHAT_ID).
from utilit.config import settings

# –ò–º–ø–æ—Ä—Ç —Å–µ—Ä–≤–∏—Å–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
from utilit.notification import NotificationService

# –°–æ–∑–¥–∞–µ–º –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤,
# –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö –¥–ª—è –ª–∏—á–Ω—ã—Ö —á–∞—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
user_private_router = Router()

# –§–∏–ª—å—Ç—Ä—É–µ–º –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è,
# —á—Ç–æ–±—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –ª–∏—á–Ω—ã–µ (private) —á–∞—Ç—ã.
user_private_router.message.filter(ChatTypeFilter(["private"]))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è:
# —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π.
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
)
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.
@user_private_router.message(CommandStart())
async def start_cmd(message: types.Message, session: AsyncSession) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start, –ø–æ–ª—É—á–∞—è –∫–æ–Ω—Ç–µ–Ω—Ç –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—è –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –≤–∏–¥–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å –ø–æ–¥–ø–∏—Å—å—é –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π.
    """
    user_id = message.from_user.id
    # –ü–æ–ª—É—á–∞–µ–º –º–µ–¥–∏–∞-–∫–æ–Ω—Ç–µ–Ω—Ç –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.
    media, reply_markup = await get_menu_content(session,
                                                 level=0,
                                                 menu_name="main",
                                                 user_id=user_id)

    # –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É
    if not media or not reply_markup:
        await message.answer("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–Ω—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –º–µ–¥–∏–∞ –∏–ª–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è /start")
        return

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ñ–æ—Ç–æ, –∏—Å–ø–æ–ª—å–∑—É—è –¥–∞–Ω–Ω—ã–µ, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã.
    await message.answer_photo(
        media.media, caption=media.caption, reply_markup=reply_markup
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help.
@user_private_router.message(Command("help"))
async def help_cmd(message: types.Message) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º-–º–∞–≥–∞–∑–∏–Ω–æ–º.
    """
    help_text = (
        "üõç **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!**\n"
        "–ö–æ–ª–ø–∞–∫–∏ –¥–ª—è –∫—É—Ä–µ–Ω–∏—è –∏ –∫–æ–Ω—Ñ–µ—Ç—ã –∏–∑ –ê–º—Å—Ç–µ—Ä–¥–∞–º–∞! üç¨\n\n"

        "üìå **–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n"
        "‚ûñ /start ‚Äì –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä –º–µ–Ω—é.\n"
        "‚ûñ /help ‚Äì –ü–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É. ‚ÑπÔ∏è\n\n"

        "üì¶ **–î–æ—Å—Ç–∞–≤–∫–∞:**\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã. üöö –î–µ—Ç–∞–ª–∏ –æ–±—Å—É–∂–¥–∞—é—Ç—Å—è –ø—Ä–∏ –∑–∞–∫–∞–∑–µ.\n\n"

        "üí≥ **–û–ø–ª–∞—Ç–∞:**\n"
        "–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É BLIK, TON-–∫–æ—à–µ–ª–µ–∫ –∏–ª–∏ –Ω–∞–ª–∏—á–Ω—ã–µ –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ. üí∞\n\n"

        "üè™ **–û –º–∞–≥–∞–∑–∏–Ω–µ:**\n"
        "–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –ø–æ –æ—Ç–ª–∏—á–Ω—ã–º —Ü–µ–Ω–∞–º! ‚ù§Ô∏è\n\n"

        "üõí **–ö–æ—Ä–∑–∏–Ω–∞:**\n"
        "–î–æ–±–∞–≤–ª—è–π—Ç–µ, —É–¥–∞–ª—è–π—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏ –æ—Ñ–æ—Ä–º–ª—è–π—Ç–µ –∑–∞–∫–∞–∑ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è. üîÑ\n\n"

        "üç¨ **–¢–æ–≤–∞—Ä—ã:**\n"
        "üç≠ *Cannabis Lollipops* ‚Äì –ª–µ–¥–µ–Ω—Ü—ã —Å —Ä–∞–∑–Ω—ã–º–∏ –≤–∫—É—Å–∞–º–∏.\n"
        "üéâ *–ö–æ–ª–ø–∞–∫–∏* ‚Äì —Å—Ç–∏–ª—å–Ω—ã–µ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã –¥–ª—è –≤–µ—á–µ—Ä–∏–Ω–æ–∫.\n\n"

        "üì© **–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑:**\n"
        "–ù–∞–∂–º–∏—Ç–µ ¬´–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑¬ª –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω—É –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π. üìû\n\n"

        "‚ùì –û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã? –û–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É! üí¨"
    )

    await message.answer(help_text)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É.
async def add_to_cart(
        callback: types.CallbackQuery,
        callback_data: MenuCallBack,
        session: AsyncSession,
) -> None:
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    1. –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ callback.
    2. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç.
    3. –î–æ–±–∞–≤–ª—è–µ—Ç —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É –ø–æ product_id –∏–∑ callback_data.
    4. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞.
    """
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ callback.
    user_local = callback.from_user

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
    await orm_add_user(
        session,
        user_id=user_local.id,
        first_name=user_local.first_name,
        last_name=user_local.last_name or "",
        phone=None,
    )
    # –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É.
    if callback_data.product_id is not None:
        await orm_add_to_cart(session, user_id=user_local.id,
                              product_id=callback_data.product_id)
        await callback.answer("–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!")
        await session.commit()
    else:
        await callback.answer("–û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä–∞.",
                              show_alert=True)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤, —Ñ–æ—Ä–º–∏—Ä—É–µ–º—ã—Ö —á–µ—Ä–µ–∑ MenuCallBack.
@user_private_router.callback_query(MenuCallBack.filter())
async def user_menu(
        callback: types.CallbackQuery,
        callback_data: MenuCallBack,
        session: AsyncSession,
        notification_service: NotificationService = None,
) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –º–µ–Ω—é.

    –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç callback_data:
      - –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω "checkout" –Ω–∞ —É—Ä–æ–≤–Ω–µ 4, –æ—Ñ–æ—Ä–º–ª—è–µ—Ç –∑–∞–∫–∞–∑.
      - –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ "add_to_cart", –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É.
      - –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –æ–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –º–µ–Ω—é.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
      callback: –æ–±—ä–µ–∫—Ç CallbackQuery –æ—Ç Telegram.
      callback_data: –¥–∞–Ω–Ω—ã–µ callback, —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ MenuCallBack.
      session: –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è SQLAlchemy –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î.
      notification_service: —Å–µ—Ä–≤–∏—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π; –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω,
       —Å–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π.
    """
    # –ï—Å–ª–∏ —Å–µ—Ä–≤–∏—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –µ–≥–æ.
    if notification_service is None:
        notification_service = NotificationService(
            bot=callback.bot,  # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ –∏–∑ callback.
            admin_chat_id=settings.ADMIN_CHAT_ID,
        )

    try:
        # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –ø—É–Ω–∫—Ç "checkout" –∏ —É—Ä–æ–≤–µ–Ω—å –º–µ–Ω—é —Ä–∞–≤–µ–Ω 4,
        # –≤—ã–ø–æ–ª–Ω—è–µ–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞.
        if callback_data.menu_name == "checkout" and callback_data.level == 4:
            media, keyboards = await checkout(
                session, callback.from_user.id, notification_service
            )
            # –û–±–Ω–æ–≤–ª—è–µ–º –º–µ–¥–∏–∞-—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è,
            # –∏—Å–ø–æ–ª—å–∑—É—è –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.
            if (
                    callback.message
                    and isinstance(callback.message,
                                   types.Message)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞
                    and callback.message.photo  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–µ–¥–∏–∞
            ):
                await callback.message.edit_media(
                    media=media,
                    reply_markup=keyboards
                )
            await callback.answer()
            return

        # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ "add_to_cart", –¥–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É.
        if callback_data.menu_name == "add_to_cart":
            await add_to_cart(callback, callback_data, session)
            return

        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –º–µ–Ω—é –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ –¥–∞–Ω–Ω—ã–º,
        # –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º –≤ callback.
        print(f"–ü–µ—Ä–µ–¥–∞—á–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ get_menu_content: "
              f"level={callback_data.level}, menu_name={callback_data.menu_name}, "
              f"category={callback_data.category}, page={callback_data.page}, "
              f"user_id={callback.from_user.id}, product_id={callback_data.product_id}")

        logger.debug(f"–ü–µ—Ä–µ–¥–∞—á–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ get_menu_content: "
                     f"level={callback_data.level}, menu_name={callback_data.menu_name}, "
                     f"category={callback_data.category}, page={callback_data.page}, "
                     f"user_id={callback.from_user.id}, product_id={callback_data.product_id}")

        media, reply_markup = await get_menu_content(
            session,
            level=callback_data.level,
            menu_name=callback_data.menu_name,
            category=callback_data.category,
            page=callback_data.page,
            user_id=callback.from_user.id,
            product_id=callback_data.product_id,
        )
        # –ï—Å–ª–∏ –º–µ–¥–∏–∞-–∫–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        if not media:
            await callback.answer("–ú–µ–¥–∏–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.", show_alert=True)
            return

        # –ï—Å–ª–∏ media —è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–æ–π, –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –µ–µ –≤ –æ–±—ä–µ–∫—Ç InputMediaPhoto.
        if isinstance(media, str):
            media = InputMediaPhoto(media=media)

        # –õ–æ–≥–≥–∏—Ä—É–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ–¥–∏–∞ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ.
        logger.debug(f"Media: {media}")
        logger.debug(f"Reply Markup: {reply_markup}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –¥–æ—Å—Ç—É–ø–æ–º –∫ –∞—Ç—Ä–∏–±—É—Ç–∞–º
        if not callback.message or not isinstance(callback.message,
                                                  types.Message):
            await callback.answer("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ!", show_alert=True)
            return

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –º–µ–¥–∏–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
        current_media = (
            callback.message.photo[
                -1].file_id if callback.message and callback.message.photo else None
        )
        current_reply_markup = callback.message.reply_markup if callback.message else None

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –ª–∏ –º–µ–¥–∏–∞ –∏–ª–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        is_media_changed = (
            current_media != media.media
            if isinstance(media, InputMediaPhoto)
            else True
        )
        is_markup_changed = current_reply_markup != reply_markup

        # –ï—Å–ª–∏ –º–µ–¥–∏–∞ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å, –Ω–µ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        if not is_media_changed and not is_markup_changed:
            await callback.answer("–°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ.",
                                  show_alert=True)
            return

        # –ü—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–æ–≤—ã–º –º–µ–¥–∏–∞ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π.
        try:
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
            if isinstance(callback.message, types.Message):
                await callback.message.edit_media(
                    media=media,
                    reply_markup=reply_markup)

        except TelegramBadRequest as e:
            if "message is not modified" in str(e):
                logger.warning("–ü–æ–ø—ã—Ç–∫–∞ –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π.")
            else:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –º–µ–¥–∏–∞: {e}",
                             exc_info=True)
                await callback.answer(
                    "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –º–µ–¥–∏–∞.",
                    show_alert=True
                )
        finally:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç, —á—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å –æ–∂–∏–¥–∞–Ω–∏–µ Telegram.
            await callback.answer()
    except Exception as e:
        # –õ–æ–≥–≥–∏—Ä—É–µ–º –ª—é–±—É—é –æ—à–∏–±–∫—É, –≤–æ–∑–Ω–∏–∫—à—É—é –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–µ–Ω—é.
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ user_menu: {e}",
                     exc_info=True)
        await callback.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.",
            show_alert=True
        )
