import os
import logging
from aiogram.filters import Filter
from aiogram.types import CallbackQuery
from dotenv import load_dotenv
from aiogram import types, Router, Bot
from aiogram.filters import CommandStart

from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy.testing.plugin.plugin_base import logging

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã ORM –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î
from database.orm_query import (
    orm_add_to_cart,
    orm_add_user,
    orm_get_info_pages,
    orm_add_order,
    orm_get_user_carts,
    orm_get_order_details,
)

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã –∏ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏
from filters.chat_types import ChatTypeFilter
from handlers.menu_processing import get_menu_content
from keyboards.inline import MenuCallBack, get_payment_keyboard, OrderCallbackData

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, ADMIN_ID)
load_dotenv()

# –°–æ–∑–¥–∞–µ–º –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–∞—Ä—à—Ä—É—Ç–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_private_router = Router()

# –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –º–∞—Ä—à—Ä—É—Ç—ã —ç—Ç–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–∞ –ø—Ä–∏–º–µ–Ω–∏–º—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –ª–∏—á–Ω—ã—Ö —á–∞—Ç–æ–≤
user_private_router.message.filter(ChatTypeFilter(["private"]))

# –ü–æ–ª—É—á–∞–µ–º ID –∏ –Ω–∏–∫–Ω–µ–π–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
ADMIN_ID = str(os.getenv("ADMIN_ID"))
ADMIN_USERNAME = os.getenv("ADMIN_USERNAME")


# Handler –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
@user_private_router.message(CommandStart())
async def start_cmd(message: types.Message, session: AsyncSession):
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    media, reply_markup = await get_menu_content(session, level=0, menu_name="main")
    # –ü–æ—Å—ã–ª–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å –∑–∞–¥–∞–Ω–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await message.answer_photo(media.media, caption=media.caption, reply_markup=reply_markup)


# –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
async def add_to_cart(callback: types.CallbackQuery, callback_data: MenuCallBack, session: AsyncSession):
    user_local = callback.from_user  # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await orm_add_user(
        session,
        user_id=user_local.id,
        first_name=user_local.first_name,
        last_name=user_local.last_name,
        phone=None,
    )
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
    await orm_add_to_cart(session, user_id=user_local.id, product_id=callback_data.product_id)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await callback.answer("–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!")


# –ö–ª–∞—Å—Å —Ñ–∏–ª—å—Ç—Ä–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ –∑–∞–∫–∞–∑–∞–º
class OrderCallbackFilter(Filter):
    async def __call__(self, callback: CallbackQuery) -> bool:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ callback_data —Å "order:"
        return callback.data.startswith("order:")


# # Handler –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–æ–º "OrderCallbackFilter"
# @user_private_router.callback_query(OrderCallbackFilter())
# async def handle_order(callback: CallbackQuery):
#     # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ callback_data (–Ω–∞–ø—Ä–∏–º–µ—Ä: "create", "confirm")
#     action = callback.data.split(":")[1]
#     if action == "confirm":
#         # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
#         await callback.answer("–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω!")


# Handler –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö OrderCallbackData
@user_private_router.callback_query(OrderCallbackData.filter())
async def process_order(
        callback: types.CallbackQuery,
        session: AsyncSession,
        bot: Bot,
):
    user = callback.from_user  # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
        cart_items = await orm_get_user_carts(session, user.id)
        if not cart_items:
            await callback.answer("üõí –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!", show_alert=True)
            return

        # –†–∞—Å—á–µ—Ç –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏
        total = sum(item.product.price * item.quantity for item in cart_items)

        # –§–æ—Ä–º–∏—Ä—É–µ–º items –¥–ª—è –∑–∞–∫–∞–∑–∞
        order_items = [
            {
                "product_id": item.product.id,
                "quantity": item.quantity,
                "price": float(item.product.price)
            } for item in cart_items
        ]

        # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        order = await orm_add_order(
            session=session,
            user_id=user.id,
            total_price=total,
            items=order_items,
            status="pending"  # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
        )

        # –ü–æ–ª—É—á–∞–µ–º –±–∞–Ω–Ω–µ—Ä –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
        order_banner = await orm_get_info_pages(session, page="order")
        admin_link = order_banner[0].admin_link if order_banner else "https://t.me/CBDS_support"

        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await callback.message.answer(
            f"‚úÖ –ó–∞–∫–∞–∑ #{order.id} –æ—Ñ–æ—Ä–º–ª–µ–Ω!\n"
            f"–°—É–º–º–∞: {total} PLN\n"
            f"–°–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º: {admin_link}",
            reply_markup=types.ReplyKeyboardRemove()
        )

        # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        order_details = await orm_get_order_details(session, order.id)
        order_text = (
            f"üõí –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ #{order.id}\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{user.username}\n"
            f"üì± ID: {user.id}\n"
            f"üìû –ö–æ–Ω—Ç–∞–∫—Ç: {user.phone or '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n"
            f"üíµ –°—É–º–º–∞: {total} PLN\n\n"
            "–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:\n"
        )

        for item in order_details.items:
            order_text += f"- {item.product.name} ({item.quantity} —à—Ç. √ó {item.price} PLN)\n"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        await bot.send_message(
            chat_id="https://t.me/CBDS_support",
            text=order_text,
            parse_mode="Markdown",
            reply_markup=get_payment_keyboard(order_id=order.id)  # –ü–µ—Ä–µ–¥–∞–µ–º ID –∑–∞–∫–∞–∑–∞
        )

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞: {str(e)}", exc_info=True)
        await callback.message.answer(
            "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
    finally:
        await callback.answer()



# Handler –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –º–µ–Ω—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö MenuCallBack
@user_private_router.callback_query(MenuCallBack.filter())
async def user_menu(callback: types.CallbackQuery, callback_data: MenuCallBack, session: AsyncSession):
    if callback_data.menu_name == "add_to_cart":  # –ï—Å–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É
        await add_to_cart(callback, callback_data, session)
        return

    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –º–µ–Ω—é –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    media, reply_markup = await get_menu_content(
        session,
        level=callback_data.level,
        menu_name=callback_data.menu_name,
        category=callback_data.category,
        page=callback_data.page,
        user_id=callback.from_user.id,
        product_id=callback_data.product_id,
    )
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –Ω–æ–≤—ã–º –º–µ–¥–∏–∞ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await callback.message.edit_media(media=media, reply_markup=reply_markup)
    await callback.answer()
